@import '_mixin';

.sr-only {
	@include reset_min;
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
}

dialog {
	&#scm-dialog {
		background: {
			color: var(--scm-color-bg, #fff);
		}

		border: {
			radius: var(--scm-border-radius, 0);
			width: 0;
		}

		max-height: 80vh;
		width: var(--scm-dialog-width, 900px);
		;
		padding: 0;

		&::backdrop {
			background-color: var(--scm-color-backdrop, rgba(0, 0, 0, .7));
		}

		.scm {
			&-dialog {

				/* wrapper */
				&-wrapper {}

				/* header */
				&-header {
					&-logo {
						max-height: var(--scm-logo-max-height, 48px);
					}

					border: {
						bottom: 1px solid var(--scm-color-btn-text);
					}

					padding: var(--scm-spacer-22);

					&-container {
						p {
							text: {
								align: center;
							}
						}

						&:has(img) {
							display: flex;
							gap: var(--scm-spacer-32);

							align: {
								items: center;
							}

							p {
								margin: 0;

								text: {
									align: left;
								}
							}
						}
					}
				}

				&-content {
					display: flex;

					flex: {
						direction: column-reverse;
					}

					&s {
						border: {
							bottom: 1px solid var(--scm-color-btn-text);
						}
					}

					li {
						@include reset_min;
					}

					&-tab {
						height: 0;
						overflow: hidden;
						padding: 0;
						width: 0;
						position: relative;

						&[aria-expanded="true"] {
							display: block;
							padding: var(--scm-spacer-22);
							width: auto;
							height: auto;
							max-height: 50vh;
							overflow: auto;
						}

						p {
							margin: 1em 0;
						}

						&s {
							@include reset_ul;

							border: {
								bottom: 1px solid var(--scm-color-btn-text);
							}

							@include small {
								display: grid;

								grid: {
									template: {
										columns: repeat(3, 1fr);
									}
								}
							}

							a {
								border: {
									bottom: 3px solid transparent;
								}

								display: block;

								font: {
									size: smaller;
								}

								padding: var(--scm-spacer-8);

								@include small {
									padding: var(--scm-spacer-12);
								}

								text: {
									decoration: none;
									align: center;
								}

								&:active,
								&:focus,
								&:focus-within,
								&:hover {
									border: {
										bottom: 3px solid var(--scm-color-btn-pri-bg);
									}
								}

								&[aria-selected="true"] {
									color: var(--scm-color-btn-pri-text);

									background: {
										color: var(--scm-color-btn-pri-bg);
									}

									@include small {
										color: inherit;

										background: {
											color: inherit;
										}

										border: {
											bottom: 3px solid var(--scm-color-btn-text);
										}
									}

									&:hover {
										cursor: default;
									}
								}
							}
						}
					}
				}

				&-button {
					background: {
						color: var(--scm-color-btn-bg);
					}

					border: {
						color: var(--scm-color-btn-text);
						radius: var(--scm-button-border-radius);
						style: solid;
						width: 1px;
					}

					color: var(--scm-color-btn-text);
					display: block;

					font: {
						size: var(--scm-font-size);
						weight: var(--scm-font-weight-bold);
					}

					padding: var(--scm-spacer-8) var(--scm-spacer-32);
					min-width: 180px;

					text: {
						align: center;
					}

					width: 100%;

					@include small {
						width: auto;
					}

					&:hover {
						cursor: pointer;

						border: {
							color: var(--scm-color-btn-pri-bg);
						}
					}

					&:active,
					&:focus,
					&:focus-within {
						box: {
							shadow: 0 0 8px 0 #ddd;
						}
					}

					&-allow {
						background: {
							color: var(--scm-color-btn-pri-bg);
						}

						color: var(--scm-color-btn-pri-text);
					}

					&s {
						&-wrapper {
							@include reset_ul;
							display: flex;

							flex: {
								direction: column;
							}

							gap: var(--scm-spacer-12);

							@include small {
								flex: {
									direction: row-reverse;
								}

								gap: var(--scm-spacer-32);
							}

							justify: {
								content: flex-start;
							}

							padding: var(--scm-spacer-22);
						}
					}

					&-container {
						&.hidden {
							display: none;
						}
					}
				}

				dl {
					font: {
						size: var(--scm-font-size-dl);
					}
				}

				dt {
					font: {
						weight: var(--scm-font-weight-bolder);
					}

					@media screen and (max-width: 782px) {
						margin: {
							bottom: var(--scm-spacer-16);
						}
					}
				}

				dd {
					@media screen and (max-width: 782px) {
						display: none;
					}

					margin: {
						inline: {
							start: 0;
						}
					}

					font: {
						size: .875em;
						weight: var(--scm-font-weight-thin);
					}

					padding: {
						bottom: var(--scm-spacer-16);
					}
				}

				&-switch {
					display: grid;

					grid: {
						template: {
							columns: 40px auto;
						}
					}

					gap: var(--scm-spacer-8);

					align: {
						items: center;
					}

					input,
					p {
						margin: 0;
						padding: 0;
					}

					input {
						&[type="checkbox"] {
							width: 40px;
							height: 40px;

							&:checked {
								accent: {
									color: var(--scm-color-checkbox);
								}
							}
						}
					}
				}
			}
		}
	}
}

.scm {
	&-icon {
		width: 48px;
		height: 48px;
		position: fixed;
		left: var(--scm-spacer-16);
		bottom: var(--scm-spacer-16);

		.scm-dialog-button {
			@include reset;
			min-width: unset;
			width: 48px;
			height: 48px;

			svg {
				width: 48px;
				height: 48px;
			}
		}
	}
}